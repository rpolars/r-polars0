% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__expr.R
\name{Expr_replace_strict}
\alias{Expr_replace_strict}
\title{Replace all values by different values.}
\usage{
Expr_replace_strict(old, new, default = NULL, return_dtype = NULL)
}
\arguments{
\item{old}{Can be several things:
\itemize{
\item a vector indicating the values to recode;
\item if \code{new} is missing, this can be a named list e.g \code{list(old = "new")} where
the names are the old values and the values are the replacements. Note that
if old values are numeric, the names must be wrapped in backticks;
\item an Expr
}}

\item{new}{Either a vector of length 1, a vector of same length as \code{old} or
an Expr. If missing, \code{old} must be a named list.}

\item{default}{The default replacement if the value is not in \code{old}. Can be
an Expr. If \code{NULL} (default), then the value doesn't change.}

\item{return_dtype}{The data type of the resulting expression. If set to
\code{NULL} (default), the data type is determined automatically based on the
other inputs.}
}
\value{
Expr
}
\description{
This changes all the values in a column, either using a specific replacement
or a default one. See \code{\link[=Expr_replace]{$replace()}} to replace only a subset
of values.
}
\examples{
df = pl$DataFrame(a = c(1, 2, 2, 3))

# "old" and "new" can take vectors of length 1 or of same length
df$with_columns(replaced = pl$col("a")$replace_strict(2, 100, default = 1))
df$with_columns(
  replaced = pl$col("a")$replace_strict(c(2, 3), c(100, 200), default = 1)
)

# "old" can be a named list where names are values to replace, and values are
# the replacements
mapping = list(`2` = 100, `3` = 200)
df$with_columns(replaced = pl$col("a")$replace_strict(mapping, default = -1))

# one can specify the data type to return instead of automatically
# inferring it
df$with_columns(
  replaced = pl$col("a")$replace_strict(mapping, default = 1, return_dtype = pl$Int32)
)

# "old", "new", and "default" can take Expr
df = pl$DataFrame(a = c(1, 2, 2, 3), b = c(1.5, 2.5, 5, 1))
df$with_columns(
  replaced = pl$col("a")$replace_strict(
    old = pl$col("a")$max(),
    new = pl$col("b")$sum(),
    default = pl$col("b"),
  )
)
}
